// RUN: xdsl-opt -t mlir %s | filecheck %s


module() {
  func.func() ["sym_name" = "struct_to_struct", "function_type" = !fun<[!llvm.struct<"", [!i32]>], [!llvm.struct<"", [!i32]>]>, "sym_visibility" = "private"] {
    ^0(%0 : !llvm.struct<"", [!i32]>):
      func.return(%0 : !llvm.struct<"", [!i32]>)
  }
  func.func() ["sym_name" = "struct_to_struct2", "function_type" = !fun<[!llvm.struct<"", [!i32, !i32]>], [!llvm.struct<"", [!i32, !i32]>]>, "sym_visibility" = "private"] {
    ^1(%1 : !llvm.struct<"", [!i32, !i32]>):
      func.return(%1 : !llvm.struct<"", [!i32, !i32]>)
  }
}


//      CHECK: func.func private @struct_to_struct(%{{.*}}: !llvm.struct<(i32)>) -> !llvm.struct<(i32)> {
// CHECK-NEXT:     return %{{.*}} : !llvm.struct<(i32)>
// CHECK-NEXT:   }
// CHECK-NEXT:   func.func private @struct_to_struct2(%{{.*}}: !llvm.struct<(i32, i32)>) -> !llvm.struct<(i32, i32)> {
// CHECK-NEXT:     return %{{.*}} : !llvm.struct<(i32, i32)>
// CHECK-NEXT: }
